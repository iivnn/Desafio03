{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpClient, HttpXhrBackend } from '@angular/common/http';\nlet FilmsComponent = class FilmsComponent {\n  constructor(http) {\n    this.results = [];\n    http.get(\"https://swapi.dev/api/films\").subscribe(result => {\n      this.results = result.results;\n    }, error => console.error(error));\n  }\n  getFilmCharacters(id) {\n    const httpClient = new HttpClient(new HttpXhrBackend({\n      build: () => new XMLHttpRequest()\n    }));\n    var result = this.results.find(x => x.episode_id == id);\n    var index = this.results.findIndex(x => x.episode_id == id);\n    result?.characters.forEach(x => {\n      httpClient.get(x).subscribe(result => {\n        this.results[index].charactersInfo.push(result);\n      }, error => console.error(error));\n    });\n  }\n};\nFilmsComponent = __decorate([Component({\n  selector: 'app-films-component',\n  templateUrl: './films.component.html'\n})], FilmsComponent);\nexport { FilmsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,UAAU,EAAEC,cAAc,QAAQ,sBAAsB;AAO1D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAYC,IAAgB;IAHrB,YAAO,GAAc,EAAE;IAI5BA,IAAI,CAACC,GAAG,CAAO,6BAA6B,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MAC/D,IAAI,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO;IAC/B,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,iBAAiB,CAACC,EAAU;IAC1B,MAAMC,UAAU,GAAG,IAAIb,UAAU,CAAC,IAAIC,cAAc,CAAC;MACnDa,KAAK,EAAE,MAAM,IAAIC,cAAc;KAChC,CAAC,CAAC;IAEH,IAAIR,MAAM,GAAG,IAAI,CAACC,OAAO,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,IAAIN,EAAE,CAAC;IAEvD,IAAIO,KAAK,GAAG,IAAI,CAACX,OAAO,CAACY,SAAS,CAACH,CAAC,IAAIA,CAAC,CAACC,UAAU,IAAIN,EAAE,CAAC;IAE3DL,MAAM,EAAEc,UAAU,CAACC,OAAO,CAACL,CAAC,IAAG;MAC7BJ,UAAU,CAACR,GAAG,CAAYY,CAAC,CAAC,CAACX,SAAS,CAACC,MAAM,IAAG;QAC9C,IAAI,CAACC,OAAO,CAACW,KAAK,CAAC,CAACI,cAAc,CAACC,IAAI,CAACjB,MAAM,CAAC;MACjD,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;CACD;AA1BYP,cAAc,eAL1BH,SAAS,CAAC;EACT0B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE;CACd,CAAC,GAEWxB,cAAc,CA0B1B;SA1BYA,cAAc","names":["Component","HttpClient","HttpXhrBackend","FilmsComponent","constructor","http","get","subscribe","result","results","error","console","getFilmCharacters","id","httpClient","build","XMLHttpRequest","find","x","episode_id","index","findIndex","characters","forEach","charactersInfo","push","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\iivan\\OneDrive\\Documentos\\GitHub\\Desafio03\\Parte2\\Parte2\\ClientApp\\src\\app\\films\\films.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient, HttpXhrBackend } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-films-component',\r\n  templateUrl: './films.component.html'\r\n})\r\n\r\nexport class FilmsComponent {\r\n\r\n  public results: Results[] = [];\r\n  private _http: HttpClient;\r\n\r\n  constructor(http: HttpClient) {\r\n    http.get<Film>(\"https://swapi.dev/api/films\").subscribe(result => {\r\n      this.results = result.results;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  getFilmCharacters(id: number) {\r\n    const httpClient = new HttpClient(new HttpXhrBackend({\r\n      build: () => new XMLHttpRequest()\r\n    }));\r\n\r\n    var result = this.results.find(x => x.episode_id == id);\r\n\r\n    var index = this.results.findIndex(x => x.episode_id == id);\r\n\r\n    result?.characters.forEach(x => {\r\n      httpClient.get<Character>(x).subscribe(result => {\r\n        this.results[index].charactersInfo.push(result);\r\n      }, error => console.error(error));\r\n    })     \r\n  }\r\n}\r\n\r\ninterface Film {\r\n  count: string;\r\n  results: Results[];\r\n}\r\n\r\ninterface Results {\r\n  title: string;\r\n  episode_id: number;\r\n  opening_crawl: string;\r\n  director: string;\r\n  producer: string;\r\n  release_date: string;\r\n  characters: string[];\r\n  charactersInfo: Character[];\r\n}\r\n\r\ninterface Character {\r\n  name: string;\r\n  height: string;\r\n  mass: string;\r\n  hair_color: string;\r\n  skin_color: string;\r\n  eye_color: string;\r\n  birth_year: string;\r\n  gender: string\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}